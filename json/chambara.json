{
   "name":"Chambara",
   "tagline":"Two-color Stealth Action PS4 Game",
   "sections": [
        {
            "name": "ABOUT",
            "details": "Chambara is a local multiplayer stealth-deathmatch game with only two colors, allowing players to seamlessly camouflage themselves with the environment. This empowers players to sneak, search, and ambush each other in dramatic, stylish duels. Positioning in 3D space makes you invisible from one angle, but vulnerable from another. Developed by a team of ~30 USC students over the course of a year, and released on PS4, Chambara is truly a unique masterpiece. It has been praised by critics and given numerous awards.\n\nTwo to four players compete on a multitude of stages to be the greatest at hiding, fighting and surprising their foes. Players can use their swords directly, or stun their opponents before finishing them off. Since one hit is all you need, action varies between calm and frantic as players work to outsmart and outplay their opponent. Check out the  <a>https://www.youtube.com/watch?v=6cy-RWEtsPY--Trailer<a> here."
        },
        {
            "name": "LOOKING BACK",
            "details": "Chambara was my first time working on a team of that size (~30 people) and as such, presented a new set of difficulties that I hadn't encountered before. While I had previously used version control, this was the first time that it truly became necessary, with multiple rollbacks, meetings to solve merge conflicts, and branches. Perforce saved Chambara numerous times. The large team also brought members who were not as familiar with Unity and Perforce, and explaining those programs to them was a new experience for a number of us.\n\nFrom an engineering standpoint, since Chambara was written for a game jam, a large amount of the codebase was thrown together quickly, without much thought for reuse or expansion. While the engineering team tried to refactor the code where we could, the deadlines we were given meant that we spent more time writing new code than we spent refactoring. This led to some very strange instances of spaghetti code. Files regularly reached upwards of thousands of lines. Each file was taken by a couple of engineers, who understood the convoluted flow and were the quickest to be able to make changes.\n\nWhen we originally started working on Chambara, the plan was to have networked multiplayer. We spent a large portion of the first semester working on networked multiplayer, however it ended up getting scrapped. Due to the visual stealth nature of the game, the net-code needed to be exceptionally tight, and we were not able to get it to that point. Additionally, adding networked features would have dramatically increased the number of technical requirements that Microsoft and Sony demanded of the game, and we were very intent on releasing on one of those consoles. So, scope had to be reduced, and networking was removed.\n\nFinally, Chambara was interesting for me specifically, since I was asked to become the QA lead when we started the QA process. I was fortunate that Jesse Vigil stepped in and mentored me, giving me advice about how to run a QA team. With that in mind, I created a series of test suites that the QA team followed, and an intake form which populated the Google Sheet where we were storing the bugs. In hindsight, I would have saved myself time (which I spent managing the sheet) had I used an off-the-shelf QA solution, however, I was more interested in interfacing with what the team already used. I studied the PlayStation Technical Requirements extensively, and worked with the QA team to insure that we passed them the first time we submitted Chambara to Sony.\n\nAll in all, Chambara was a great learning experience, and contained a number of firsts for me. It was my first time shipping a game, working with consoles, managing a QA team, and working with a team of that size. I learned a great deal and would welcome the chance to work with any of the people who worked on Chambara again."
        }
   ],
   "images":[
      {
         "link":"http://josephboman.com/images/chambara-1.png",
         "alt":"Chambara-1"
      },
      {
         "link":"http://josephboman.com/images/chambara-2.png",
         "alt":"Chambara-2"
      },
      {
         "link":"http://josephboman.com/images/chambara-3.png",
         "alt":"Chambara-3"
      }
   ],
   "tags":[
      {
         "name":"coder",
         "text":"Built gameplay systems and controller logic in Unity for PS4"
      },
      {
         "name":"qa",
         "text":"Ran a ten person QA team and passed Sony's TRC"
      }
   ],
   "downloadType":"PlayStation",
   "downloadLink":"https://store.playstation.com/#!/en-us/games/chambara/cid=UP1279-CUSA05224_00-CHAMBARA00000000",
   "bufferType":"project"
}
